
spring.datasource:
  url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/postgres
  username: postgres
  password: postgres
  data: classpath:phones.sql
  hikari:
    connectionTimeout: 20000
    maximumPoolSize: 5
    leakDetectionThreshold: 2000
    registerMbeans: true
    maximumLifetime: 1800000
    idleTimeout: 600000

spring:
  sql:
    init:
      mode: always

spring.jpa:
  defer-datasource-initialization: true
  hibernate:
    ddl-auto: update
  show-sql: true

phone-booking:
  service:
    fonoapi: https://fonoapi.freshpixl.com

logging.level:
    org.springframework:
        boot: INFO # DEBUG

resilience4j.circuitbreaker:
  configs:
    default:
#      registerHealthIndicator: true
      slidingWindowSize: 5
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 1
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException

    shared:
      slidingWindowSize: 100
      permittedNumberOfCallsInHalfOpenState: 30
      waitDurationInOpenState: 1s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
#      ignoreExceptions:
#        - io.github.robwin.exception.BusinessException
  instances:
    fonoapi_service:
      baseConfig: default
    backendA:
      baseConfig: default
    backendB:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 10
      permittedNumberOfCallsInHalfOpenState: 3
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
#      recordFailurePredicate: io.github.robwin.exception.RecordFailurePredicate

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 100
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
#      ignoreExceptions:
#        - io.github.robwin.exception.BusinessException
  instances:
    backendA:
      baseConfig: default
    backendB:
      baseConfig: default